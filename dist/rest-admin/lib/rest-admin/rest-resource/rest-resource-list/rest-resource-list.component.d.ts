import { HttpClient } from '@angular/common/http';
import { OnInit } from '@angular/core';
import { ServerDataSource } from 'ng2-smart-table';
import { PERMISSION } from '../models/rest-resource.model';
import { NbDialogService, NbMenuService, NbTagComponent } from '@nebular/theme';
import { ActivatedRoute, Router } from '@angular/router';
import { RestAdminConfigService } from '../service/rest-admin-config.service';
import { RestResource } from '../models/rest-resource';
import { RestResourceService } from '../service/rest-resource.service';
import { RestExportService } from '../service/rest-export.service';
import { RestShareService } from '../service/rest-share.service';
import { FormBuilder, FormGroup } from '@angular/forms';
import { Observable } from 'rxjs';
import { NgxPermissionsService } from 'ngx-permissions';
import * as i0 from "@angular/core";
export declare class RestResourceListComponent implements OnInit {
    private fb;
    private serviceRestConfig;
    private serviceRestResources;
    private http;
    private dialogService;
    private activatedRoute;
    private router;
    private nbMenuService;
    private exportService;
    restShare: RestShareService;
    private permissionsService;
    private serviceRest;
    resource: RestResource;
    search: any;
    inputBelongToMany: any;
    form: FormGroup;
    alphabelt: string[];
    data: any;
    settings: any;
    source: ServerDataSource;
    currentPerPage: number;
    isFetching: boolean;
    ressourceName: string;
    filterBy: string;
    filterOperator: {
        name: string;
        value: string;
    }[];
    exportAsConfig: {
        type: string;
        elementId: string;
    };
    searchItems: any[];
    searchItem: string;
    showCheckbox: boolean;
    showDetails: boolean;
    options: any;
    allFilterContains: any;
    belongToValue: any;
    belongToMany: any;
    controls: any;
    isChecked: any;
    selectedRows: any[];
    items: {
        title: string;
    }[];
    perPagesOptions: {
        title: string;
        value: number;
    }[];
    permissions: PERMISSION[];
    get PERMISSION(): typeof PERMISSION;
    custom: boolean;
    constructor(fb: FormBuilder, serviceRestConfig: RestAdminConfigService, serviceRestResources: RestResourceService, http: HttpClient, dialogService: NbDialogService, activatedRoute: ActivatedRoute, router: Router, nbMenuService: NbMenuService, exportService: RestExportService, restShare: RestShareService, permissionsService: NgxPermissionsService, serviceRest: RestResourceService);
    ngOnInit(): void;
    toggleShowCheckbox(): void;
    onDeleteConfirm(event: any): void;
    onDeleteAllConfirm(): void;
    addNewEntity(): void;
    detailEntity(event: any): void;
    onCheckboxClick(event: any, row: any): void;
    selectAllRows(): void;
    private createMatTableColumns;
    getList(page?: any, perPage?: any): void;
    onCreateConfirm(event: any): void;
    onCustom(event: any): void;
    getFullData(): Observable<Object>;
    exportToExcel(): void;
    exportToPdf(): void;
    exportToCsv(): void;
    exportAll(): void;
    setPager(setPager: any): void;
    selectFilterBy(data: any, index: any): void;
    selectOperator(value: any, index: any): void;
    onFilter(val: any, index: any): void;
    addFieldSearch(): void;
    removeFieldSearch(index: any): void;
    private filterMany;
    getFilteredOptions(value: any, index: number): Observable<string[]>;
    filterInput(event: any, index: number): void;
    onTagRemoveBelong(tagToRemove: NbTagComponent): void;
    onChoose(event: any, index: number): void;
    startSearch(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RestResourceListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RestResourceListComponent, "ngx-rest-resource-list", never, { "resource": "resource"; }, {}, never, never>;
}
